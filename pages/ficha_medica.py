import streamlit as st
import pandas as pd
import random

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="Sistema de Fichas M√©dicas",
    page_icon="üè•",
    layout="wide"
)

# CSS personalizado con la paleta de colores
st.markdown("""
<style>
    /* Variables de colores */
    :root {
        --primary-dark: #001d4a;
        --primary-medium: #508ca4;
        --primary-light: #e2e2e2;
        --background-accent: #c2bdb6;
    }
    
    /* Fondo general */
    .main .block-container {
        background-color: var(--primary-light);
        padding: 2rem 1rem;
    }
    
    /* Estilo del t√≠tulo principal */
    .title-container {
        background-color: #c2bdb6;
        padding: 1.5rem;
        border-radius: 10px;
        margin-bottom: 2rem;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0, 29, 74, 0.1);
    }
    
    .title-text {
        color: #001d4a;
        font-size: 2.5rem;
        font-weight: bold;
        margin: 0;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
    }
    
    /* Botones principales */
    .stButton > button {
        background-color: #001d4a !important;
        color: white !important;
        border: none !important;
        border-radius: 8px !important;
        font-weight: bold !important;
        transition: all 0.3s ease !important;
    }
    
    .stButton > button:hover {
        background-color: #508ca4 !important;
        transform: translateY(-2px) !important;
        box-shadow: 0 4px 8px rgba(0, 29, 74, 0.3) !important;
    }
    
    /* Formularios */
    .stForm {
        background-color: white;
        padding: 2rem;
        border-radius: 10px;
        border: 2px solid #508ca4;
        box-shadow: 0 4px 6px rgba(80, 140, 164, 0.2);
    }
    
    /* Inputs de texto */
    .stTextInput > div > div > input,
    .stTextArea > div > div > textarea,
    .stSelectbox > div > div > select {
        border: 2px solid #508ca4 !important;
        border-radius: 5px !important;
        background-color: white !important;
    }
    
    .stTextInput > div > div > input:focus,
    .stTextArea > div > div > textarea:focus,
    .stSelectbox > div > div > select:focus {
        border-color: #001d4a !important;
        box-shadow: 0 0 0 2px rgba(0, 29, 74, 0.2) !important;
    }
    
    /* Labels */
    .stTextInput > label,
    .stTextArea > label,
    .stSelectbox > label {
        color: #001d4a !important;
        font-weight: bold !important;
    }
    
    /* M√©tricas */
    .metric-container > div {
        background-color: white;
        border: 2px solid #508ca4;
        border-radius: 8px;
        padding: 1rem;
    }
    
    .metric-container [data-testid="metric-container"] {
        background-color: white;
        border: 2px solid #508ca4;
        border-radius: 8px;
        padding: 1rem;
    }
    
    /* Dataframe */
    .stDataFrame {
        border: 2px solid #508ca4;
        border-radius: 8px;
        overflow: hidden;
    }
    
    /* Mensajes de alerta */
    .stAlert {
        border-radius: 8px;
    }
    
    .stSuccess {
        background-color: rgba(80, 140, 164, 0.1);
        border: 1px solid #508ca4;
        color: #001d4a;
    }
    
    .stError {
        background-color: rgba(0, 29, 74, 0.1);
        border: 1px solid #001d4a;
        color: #001d4a;
    }
    
    .stInfo {
        background-color: rgba(80, 140, 164, 0.1);
        border: 1px solid #508ca4;
        color: #001d4a;
    }
    
    .stWarning {
        background-color: rgba(194, 189, 182, 0.3);
        border: 1px solid #c2bdb6;
        color: #001d4a;
    }
    
    /* Subt√≠tulos */
    h3 {
        color: #001d4a !important;
        border-bottom: 2px solid #508ca4;
        padding-bottom: 0.5rem;
    }
    
    h4 {
        color: #001d4a !important;
    }
    
    /* Sidebar si se usa */
    .css-1d391kg {
        background-color: #001d4a;
    }
    
    /* Separadores */
    hr {
        border-color: #508ca4 !important;
        border-width: 2px !important;
    }
</style>
""", unsafe_allow_html=True)

# Inicializar datos de ejemplo si no existen en session_state
if 'fichas_medicas' not in st.session_state:
    st.session_state.fichas_medicas = pd.DataFrame({
        'ID_Ficha': [37245687, 35784125, 24896532, 40125456, 30254863, 38756921, 20154789, 37654128, 32455701, 42145789, 22548963, 36541278, 28965412, 39874562, 25487963],
        'DNI_Paciente': ['37245687', '35784125', '24896532', '40125456', '30254863', '38756921', '20154789', '37654128', '32455701', '42145789', '22548963', '36541278', '28965412', '39874562', '25487963'],
        'Antecedentes_Familiares': [
            'Antecedentes de ansiedad en familia paterna',
            'Padre con depresi√≥n',
            'Sin antecedentes relevantes',
            'Madre con trastorno bipolar',
            'Abuelo con demencia',
            'Hermana con TOC',
            'Sin antecedentes relevantes',
            'T√≠o con esquizofrenia',
            'Antecedentes de adicciones',
            'Sin antecedentes relevantes',
            'Padre con alcoholismo',
            'Hermano con TDAH',
            'Sin antecedentes relevantes',
            'Madre con depresi√≥n posparto',
            'Abuelo con Parkinson'
        ],
        'Medicacion': [
            'Escitalopram 10mg',
            'Fluoxetina 20mg',
            'Ninguna',
            'Lamotrigina 100mg',
            'Ninguna',
            'Sertralina 50mg',
            'Bupropi√≥n 150mg',
            'Risperidona 1mg',
            'Ninguna',
            'Alprazolam 0.25mg',
            'Naltrexona 50mg',
            'Metilfenidato 10mg',
            'Ninguna',
            'Venlafaxina 75mg',
            'Ninguna'
        ],
        'Diagnostico_General': [
            'Trastorno de ansiedad generalizada',
            'Episodio depresivo moderado',
            'Problemas de adaptaci√≥n',
            'Trastorno del estado de √°nimo',
            'Estr√©s laboral cr√≥nico',
            'Trastorno obsesivo compulsivo leve',
            'Depresi√≥n con s√≠ntomas de apat√≠a',
            'Trastorno de la personalidad',
            'Dependencia emocional',
            'Crisis de p√°nico',
            'Problemas de control de impulsos',
            'Trastorno por d√©ficit de atenci√≥n',
            'Duelo no resuelto',
            'Trastorno mixto ansioso-depresivo',
            'Insomnio cr√≥nico'
        ]
    })

# T√≠tulo principal con fondo personalizado
st.markdown("""
<div class="title-container">
    <h1 class="title-text">üè• Sistema de Fichas M√©dicas</h1>
</div>
""", unsafe_allow_html=True)

# Bot√≥n para nueva ficha m√©dica
col1, col2 = st.columns([1, 4])
with col1:
    if st.button("‚ûï Nueva Ficha M√©dica", type="primary", use_container_width=True):
        st.session_state.show_form = True

# Mostrar el formulario si el bot√≥n fue presionado
if st.session_state.get('show_form', False):
    st.markdown("### üìù Registrar Nueva Ficha M√©dica")
    
    with st.form("nueva_ficha_form", clear_on_submit=True):
        col1, col2 = st.columns(2)
        
        with col1:
            dni_paciente = st.text_input(
                "DNI del Paciente *",
                placeholder="Ej: 12345678",
                help="Ingrese el DNI del paciente"
            )
            
            antecedentes = st.text_area(
                "Antecedentes Familiares *",
                placeholder="Ej: Padre con hipertensi√≥n, madre con diabetes...",
                height=100,
                help="Describa los antecedentes m√©dicos familiares relevantes"
            )
        
        with col2:
            medicacion = st.text_area(
                "Medicaci√≥n Actual",
                placeholder="Ej: Ibuprofeno 400mg, Omeprazol 20mg...",
                height=100,
                help="Liste la medicaci√≥n actual del paciente"
            )
            
            diagnostico = st.text_input(
                "Diagn√≥stico General *",
                placeholder="Ej: Hipertensi√≥n arterial leve",
                help="Ingrese el diagn√≥stico principal"
            )
        
        st.markdown("*Campos obligatorios")
        
        # Botones del formulario
        col1, col2, col3 = st.columns([1, 1, 2])
        
        with col1:
            submitted = st.form_submit_button("üíæ Guardar Ficha", type="primary")
        
        with col2:
            cancelled = st.form_submit_button("‚ùå Cancelar")
        
        # Procesar el formulario
        if submitted:
            if dni_paciente and antecedentes and diagnostico:
                # Generar ID √∫nico
                nuevo_id = random.randint(10000000, 99999999)
                
                # Crear nueva fila
                nueva_fila = pd.DataFrame({
                    'ID_Ficha': [nuevo_id],
                    'DNI_Paciente': [dni_paciente],
                    'Antecedentes_Familiares': [antecedentes],
                    'Medicacion': [medicacion if medicacion else 'Ninguna'],
                    'Diagnostico_General': [diagnostico]
                })
                
                # Agregar a la tabla
                st.session_state.fichas_medicas = pd.concat([
                    st.session_state.fichas_medicas, 
                    nueva_fila
                ], ignore_index=True)
                
                st.success("‚úÖ ¬°Ficha m√©dica guardada exitosamente!")
                st.session_state.show_form = False
                st.rerun()
            else:
                st.error("‚ö†Ô∏è Por favor, complete todos los campos obligatorios.")
        
        if cancelled:
            st.session_state.show_form = False
            st.rerun()

# Mostrar la tabla de fichas m√©dicas
st.markdown("### üìã Fichas M√©dicas Registradas")

# Estad√≠sticas r√°pidas
st.markdown('<div class="metric-container">', unsafe_allow_html=True)
col1, col2, col3, col4 = st.columns(4)
with col1:
    st.metric("Total de Fichas", len(st.session_state.fichas_medicas))
with col2:
    pacientes_con_medicacion = len(st.session_state.fichas_medicas[st.session_state.fichas_medicas['Medicacion'] != 'Ninguna'])
    st.metric("Con Medicaci√≥n", pacientes_con_medicacion)
with col3:
    sin_antecedentes = len(st.session_state.fichas_medicas[st.session_state.fichas_medicas['Antecedentes_Familiares'].str.contains('Sin antecedentes', na=False)])
    st.metric("Sin Antecedentes", sin_antecedentes)
with col4:
    st.metric("√öltima Ficha", f"ID: {st.session_state.fichas_medicas['ID_Ficha'].iloc[-1]}")
st.markdown('</div>', unsafe_allow_html=True)

# Filtros opcionales
st.markdown("#### üîç Filtros")
col1, col2 = st.columns(2)

with col1:
    filtro_dni = st.text_input("Buscar por DNI", placeholder="Ingrese DNI para filtrar")

with col2:
    filtro_diagnostico = st.selectbox(
        "Filtrar por tipo de diagn√≥stico",
        ["Todos"] + sorted(st.session_state.fichas_medicas['Diagnostico_General'].unique().tolist())
    )

# Aplicar filtros
df_filtrado = st.session_state.fichas_medicas.copy()

if filtro_dni:
    df_filtrado = df_filtrado[df_filtrado['DNI_Paciente'].str.contains(filtro_dni, na=False)]

if filtro_diagnostico != "Todos":
    df_filtrado = df_filtrado[df_filtrado['Diagnostico_General'] == filtro_diagnostico]

# Configurar la visualizaci√≥n de la tabla
st.dataframe(
    df_filtrado,
    use_container_width=True,
    hide_index=True,
    column_config={
        "ID_Ficha": st.column_config.NumberColumn(
            "ID Ficha",
            help="Identificador √∫nico de la ficha m√©dica",
            format="%d"
        ),
        "DNI_Paciente": st.column_config.TextColumn(
            "DNI Paciente",
            help="Documento Nacional de Identidad del paciente",
            max_chars=50
        ),
        "Antecedentes_Familiares": st.column_config.TextColumn(
            "Antecedentes Familiares",
            help="Historial m√©dico familiar del paciente",
            max_chars=100
        ),
        "Medicacion": st.column_config.TextColumn(
            "Medicaci√≥n",
            help="Medicamentos actuales del paciente",
            max_chars=80
        ),
        "Diagnostico_General": st.column_config.TextColumn(
            "Diagn√≥stico General",
            help="Diagn√≥stico principal del paciente",
            max_chars=80
        )
    },
    height=400
)

# Informaci√≥n adicional
st.markdown("---")
col1, col2 = st.columns(2)

with col1:
    st.info("üí° **Consejos de uso:**\n- Use el bot√≥n 'Nueva Ficha M√©dica' para agregar registros\n- Los filtros le ayudan a encontrar fichas espec√≠ficas\n- Todos los datos se mantienen durante la sesi√≥n")

with col2:
    st.warning("‚ö†Ô∏è **Importante:**\n- Los campos marcados con * son obligatorios\n- Los datos se reinician al cerrar la aplicaci√≥n\n- Mantenga la confidencialidad de la informaci√≥n m√©dica")

# Footer
st.markdown("---")
st.markdown("""
<div style="text-align: center; color: #001d4a; font-style: italic; padding: 1rem;">
    Sistema de Fichas M√©dicas - Desarrollado con Streamlit
</div>
""", unsafe_allow_html=True)